
plugins {
    id 'org.jetbrains.kotlin.multiplatform' version "1.3.11"
    id 'org.jetbrains.kotlin.plugin.allopen' version "1.3.11"
    id 'org.jetbrains.gradle.benchmarks' version '0.1-SNAPSHOT'
    id 'com.moowork.node' version '1.2.0'
}

// Workaround the problem with Node downloading
repositories.whenObjectAdded {
    if (it instanceof IvyArtifactRepository) {
        metadataSources {
            artifact()
        }
    }
}

node {
    version = "$node_version"
    npmVersion = "$npm_version"
    download = true
    nodeModulesDir = file(buildDir)
}

// how to apply plugin to a specific source set?
allOpen {
    annotation("org.openjdk.jmh.annotations.State")
}

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
}

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm') {
            configure([compilations.main, compilations.test]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    jvmTarget = '1.8'
                }
            }
        }
        fromPreset(presets.js, 'js') {
            configure([compilations.main, compilations.test]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    sourceMap = true
                    moduleKind = "umd"
                }
            }
        }
        // For ARM, preset should be changed to presets.iosArm32 or presets.iosArm64
        // For Linux, preset should be changed to e.g. presets.linuxX64
        // For MacOS, preset should be changed to e.g. presets.macosX64
        fromPreset(presets.macosX64, 'native')
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation 'org.jetbrains.gradle.benchmarks:runtime'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }
        jsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
        nativeMain {
        }
        nativeTest {
        }
    }

}

// Configure benchmark
benchmark {
    // Setup configurations
    configurations {
        // This one matches compilation base name, e.g. 'jvm', 'jvmTest', etc
        jvm {
            jmhVersion = "1.21"
        }
        js
        register("native")
        
    }
}
